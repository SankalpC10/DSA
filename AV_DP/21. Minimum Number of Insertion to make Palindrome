21. Form a Palindrome

Approach- minimum number of insertion = Length of string - length of lcs
** As palindrome string have lcs=0 and lcs =1, when completely non- repeating elements.

Given a string, find the minimum number of characters to be inserted to convert it to palindrome.
For Example:
ab: Number of insertions required is 1. bab or aba
aa: Number of insertions required is 0. aa
abcd: Number of insertions required is 3. dcbabcd


Example 1:

Input: str = "abcd"
Output: 3
Explanation: Inserted character marked
with bold characters in dcbabcd
Example 2:

Input: str = "aa"
Output: 0
Explanation:"aa" is already a palindrome.

class Solution{
  public:
    int countMin(string str){
        string r=str;
        reverse(r.begin(),r.end());
        int l=str.size();
        int t[l+1][l+1];
        for(int i=0;i<l+1;i++)
        {
            for(int j=0;j<l+1;j++)
            {
                if(i==0 || j==0)
                {
                    t[i][j]=0;
                }
            }
        }
        for(int i=1;i<l+1;i++)
        {
            for(int j=1;j<l+1;j++)
            {
                if(str[i-1]==r[j-1])
                {
                    t[i][j]=1+t[i-1][j-1];
                }
                else
                {
                    t[i][j]=max(t[i-1][j],t[i][j-1]);
                }
            }
        }
        return l-t[l][l];
    }
};
