17. Longest palindromic Subsequence

Approach- Find LCS from string and reverse of it.

#include <bits/stdc++.h>
using namespace std;

int lps(string s)
{
    string r=s;
    reverse(r.begin(),r.end());
    int l=s.size();
    int t[l+1][l+1];
    for(int i=0;i<l+1;i++)
    {
        for(int j=0;j<l+1;j++)
        {
            if(i==0 || j==0)
            {
                t[i][j]=0;
            }
        }
    }
    for(int i=1;i<l+1;i++)
    {
        for(int j=1;j<l+1;j++)
        {
            if(s[i-1]==r[j-1])
            {
                t[i][j]= 1+ t[i-1][j-1];
            }
            else
            {
                t[i][j]=max(t[i-1][j],t[i][j-1]);
            }
        }
    }
    return t[l][l];
}

int main() {
	string s;
	cin>>s;
	cout<<lps(s);
}
