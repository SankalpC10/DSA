19. Print Shortest Common Supersequence

INPUT-
   string X = "AGGTAB";
   string Y = "GXTXAYB";
   
Output-
  AGXGTXAYB

#include <bits/stdc++.h>
using namespace std;
 
string printShortestSuperSeq(string X, string Y)
{
    int m = X.length();
    int n = Y.length();
    int t[m + 1][n + 1];

    for (int i = 0; i <= m; i++)
    {
        for (int j = 0; j <= n; j++)
        {
           if(i==0 || j==0)
           {
               t[i][j]==0;
           }
        }
        for(int i=1;i<m+1;i++)
        {
            for(int j=1;j<n+1;j++)
            {
                if(X[i-1]==Y[j-1])
                {
                    t[i][j]=1+t[i-1][j-1];
                }
                else
                {
                    t[i][j]=max(t[i-1][j],t[i][j-1]);
                }
            }
        }
    }
    string ans="";
    int i=m, j=n;
    while(i>0 && j>0)
    {
        if(X[i-1]==Y[j-1])
        {
            ans.push_back(X[i-1]);
            i--;
            j--;
        }
        else
        {
            if(t[i][j-1]>t[i-1][j])
            {
                ans.push_back(Y[j-1]);
                j--;
            }
            else
            {
                ans.push_back(X[i-1]);
                i--;
            }
        }
    }
 
    while (i > 0)
    {
        ans.push_back(X[i - 1]);
        i--;
    }
    while (j > 0)
    {
        ans.push_back(Y[j - 1]);
        j--;
    }
    reverse(ans.begin(), ans.end());
    return ans;
}
int main()
{
    string X = "AGGTAB";
    string Y = "GXTXAYB";
 
    cout << printShortestSuperSeq(X, Y);
 
    return 0;
}
