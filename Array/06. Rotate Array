06. Rotate Array

Approach- Reverse first d elements, revrese remaining elements, reverse the array.

Given an unsorted array arr[] of size N, rotate it by D elements in the counter-clockwise direction. 

Example 1:

Input:
N = 5, D = 2
arr[] = {1,2,3,4,5}
Output: 3 4 5 1 2
Explanation: 1 2 3 4 5  when rotated
by 2 elements, it becomes 3 4 5 1 2.
Example 2:

Input:
N = 10, D = 3
arr[] = {2,4,6,8,10,12,14,16,18,20}
Output: 8 10 12 14 16 18 20 2 4 6
Explanation: 2 4 6 8 10 12 14 16 18 20 
when rotated by 3 elements, it becomes 
8 10 12 14 16 18 20 2 4 6.
 

Expected Time Complexity: O(N)
Expected Auxiliary Space: O(1)

class Solution{
    public:
    
    //Function to rotate an array by d elements in counter-clockwise direction. 
    void rotate(int arr[],int start, int n)
    {
        int end=n-1;
        while(start<end)
        {
            int temp=arr[end];
            arr[end]=arr[start];
            arr[start]=temp;
            start++;
            end--;
        }
    }
    void rotateArr(int arr[], int d, int n){
        rotate(arr,0,d);
        rotate(arr,d,n);
        rotate(arr,0,n);
    }
};
